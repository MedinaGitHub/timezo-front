{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sebastian/Escritorio/timezo/front/src/pages/event/ReadEvent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { format, parseISO, formatDistance, formatRelative, subDays } from 'date-fns';\nexport default function ReadEvent() {\n  _s();\n\n  const {\n    id_owner,\n    id_counter\n  } = useParams(); //useEffect for get\n  //obtener dato de los parametros\n\n  useEffect(() => {\n    const getProcedure = async () => {\n      const procedure = await axios.get(`/api/events/${id_counter}/${id_owner}`);\n      console.log('procedure', procedure);\n      const localDate = parseISO(procedure.data[0]._event_time);\n      console.log('format to now', format(procedure.data[0]._event_time, 'MMMM dd, yyyy, EEEE, HH:mm'));\n    };\n\n    getProcedure();\n  }, [id_owner, id_counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"read\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadEvent, \"tHvDcMxhJl2gajuLDH5DxxWflJc=\", false, function () {\n  return [useParams];\n});\n\n_c = ReadEvent;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadEvent\");","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/pages/event/ReadEvent.js"],"names":["React","useEffect","useParams","axios","format","parseISO","formatDistance","formatRelative","subDays","ReadEvent","id_owner","id_counter","getProcedure","procedure","get","console","log","localDate","data","_event_time"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,MAAT,EAAgBC,QAAhB,EAA0BC,cAA1B,EAA0CC,cAA1C,EAA0DC,OAA1D,QAAyE,UAAzE;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BT,SAAS,EAA1C,CAFgC,CAGhC;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMW,YAAY,GAAG,YAAY;AAE7B,YAAMC,SAAS,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,eAAcH,UAAW,IAAGD,QAAS,EAAhD,CAAxB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,SAAzB;AACA,YAAMI,SAAS,GAAGZ,QAAQ,CAACQ,SAAS,CAACK,IAAV,CAAe,CAAf,EAAkBC,WAAnB,CAA1B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAa,eAAb,EAA6BZ,MAAM,CAACS,SAAS,CAACK,IAAV,CAAe,CAAf,EAAkBC,WAAnB,EAAgC,4BAAhC,CAAnC;AACH,KAND;;AAOAP,IAAAA,YAAY;AAGf,GAZQ,EAYN,CAACF,QAAD,EAAWC,UAAX,CAZM,CAAT;AAaA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;GAxBuBF,S;UAEaP,S;;;KAFbO,S;AAwBvB","sourcesContent":["import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { format,parseISO, formatDistance, formatRelative, subDays } from 'date-fns'\n\nexport default function ReadEvent() {\n\n    const { id_owner, id_counter } = useParams();\n    //useEffect for get\n    //obtener dato de los parametros\n\n    useEffect(() => {\n\n        const getProcedure = async () => {\n\n            const procedure = await axios.get(`/api/events/${id_counter}/${id_owner}`);\n            console.log('procedure', procedure)\n            const localDate = parseISO(procedure.data[0]._event_time);\n            console.log( 'format to now',format(procedure.data[0]._event_time, 'MMMM dd, yyyy, EEEE, HH:mm')  )\n        }\n        getProcedure()\n\n\n    }, [id_owner, id_counter])\n    return (\n        <div>\n            read\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}