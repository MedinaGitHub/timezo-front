{"ast":null,"code":"import axios from 'axios';\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_ENV === 'development' ? 'http://localhost:5000/' : process.env.REACT_APP_API,\n  timeout: 60 * 1000\n}); // Add a request interceptor\n\ninstance.interceptors.request.use(function (config) {\n  // Do something before request is sent\n  return config;\n}, function (error) {\n  // Do something with request error\n  return Promise.reject(error);\n}); // Add a response interceptor\n\ninstance.interceptors.response.use(function (response) {\n  // Any status code that lie within the range of 2xx cause this function to trigger\n  // Do something with response data\n  return response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  // Do something with response error\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/utils/axios.js"],"names":["axios","instance","create","baseURL","process","env","REACT_APP_ENV","REACT_APP_API","timeout","interceptors","request","use","config","error","Promise","reject","response"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EACHC,OAAO,CAACC,GAAR,CAAYC,aAAZ,KAA8B,aAA9B,GACM,wBADN,GAEMF,OAAO,CAACC,GAAR,CAAYE,aAJI;AAK1BC,EAAAA,OAAO,EAAE,KAAK;AALY,CAAb,CAAjB,C,CAQA;;AACAP,QAAQ,CAACQ,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACI,UAAUC,MAAV,EAAkB;AACd;AACA,SAAOA,MAAP;AACH,CAJL,EAKI,UAAUC,KAAV,EAAiB;AACb;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CARL,E,CAWA;;AACAZ,QAAQ,CAACQ,YAAT,CAAsBO,QAAtB,CAA+BL,GAA/B,CACI,UAAUK,QAAV,EAAoB;AAChB;AACA;AACA,SAAOA,QAAP;AACH,CALL,EAMI,UAAUH,KAAV,EAAiB;AACb;AACA;AACA,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAVL;AAaA,eAAeZ,QAAf","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL:\n        process.env.REACT_APP_ENV === 'development'\n            ? 'http://localhost:5000/'\n            : process.env.REACT_APP_API,\n    timeout: 60 * 1000\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(\n    function (config) {\n        // Do something before request is sent\n        return config;\n    },\n    function (error) {\n        // Do something with request error\n        return Promise.reject(error);\n    }\n);\n\n// Add a response interceptor\ninstance.interceptors.response.use(\n    function (response) {\n        // Any status code that lie within the range of 2xx cause this function to trigger\n        // Do something with response data\n        return response;\n    },\n    function (error) {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        // Do something with response error\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;"]},"metadata":{},"sourceType":"module"}