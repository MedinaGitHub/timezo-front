{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sebastian/Escritorio/timezo/front/src/pages/ReadEvent/Calendars.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from 'react';\nimport { google, outlook, office365, yahoo, ics } from \"calendar-link\";\nimport Bowser from \"bowser\";\n\nconst Calendars = ({\n  name,\n  timeTZ\n}) => {\n  _s();\n\n  const [browser, setBrowser] = useState();\n  const event = {\n    title: name,\n    start: timeTZ\n  };\n\n  const openCalendar = link => {\n    window.open(link, \"_blank\");\n  };\n\n  const sw = navigator.serviceWorker;\n\n  function pad(num, size = 2) {\n    let s = num + '';\n\n    while (s.length < size) s = '0' + s;\n\n    return s;\n  }\n\n  useEffect(() => {\n    console.log(1);\n    console.log('sw', sw);\n\n    if (sw && browser == true) {\n      console.log(2);\n      /*global showNotification, TimestampTrigger*/\n\n      /*eslint no-undef: \"error\"*/\n\n      const requestServices = async () => {\n        debugger;\n\n        if (\"showTrigger\" in Notification.prototype) {\n          /* Notification Triggers supported */\n          console.log('Notification Triggers supported');\n        }\n\n        debugger;\n        const reg = await sw.getRegistration();\n        Notification.requestPermission().then(permission => {\n          if (permission !== 'granted') {\n            alert('you need to allow push notifications');\n          } else {\n            const timestamp = new Date().getTime() + 10 * 1000;\n            const scheduledTime = new Date(timestamp);\n            console.log('reeg', reg);\n            debugger;\n            const browser = Bowser.getParser(window.navigator.userAgent);\n            console.log(`The current browser name is \"${browser.getBrowserName()}\"`);\n            reg.showNotification('Scheduled Push Notification', {\n              tag: timestamp,\n              // a unique ID\n              body: 'Hi there, it\\'s ' + pad(scheduledTime.getHours()) + ':' + pad(scheduledTime.getMinutes()),\n              // content of the push notification\n              showTrigger: new TimestampTrigger(timestamp),\n              // set the time for the push notification\n              data: {\n                url: window.location.href // pass the current url to the notification\n\n              }\n            });\n          }\n        });\n      };\n\n      requestServices();\n    }\n  }, [sw, browser]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendars\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Tambi\\xE9n, recuerdame\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => openCalendar(google(event)),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ic google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => openCalendar(ics(event)),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ic apple\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Apple\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => openCalendar(outlook(event)),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ic outlook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Outlook\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"browser\",\n      onClick: () => setBrowser(true),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Nah! prefiero en mi navegador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ic chrome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"cright\",\n      children: \"Lorem ipsum dolor, sit amet consectetur adipisicing elit. Fugit a ipsum quod eveniet excepturi.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Calendars, \"SniyH4A70MfhlOeKBmIsKpYXQjs=\");\n\n_c = Calendars;\nexport { Calendars };\n\nvar _c;\n\n$RefreshReg$(_c, \"Calendars\");","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/pages/ReadEvent/Calendars.js"],"names":["React","Component","useEffect","useState","google","outlook","office365","yahoo","ics","Bowser","Calendars","name","timeTZ","browser","setBrowser","event","title","start","openCalendar","link","window","open","sw","navigator","serviceWorker","pad","num","size","s","length","console","log","requestServices","Notification","prototype","reg","getRegistration","requestPermission","then","permission","alert","timestamp","Date","getTime","scheduledTime","getParser","userAgent","getBrowserName","showNotification","tag","body","getHours","getMinutes","showTrigger","TimestampTrigger","data","url","location","href"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react'\nimport { google, outlook, office365, yahoo, ics } from \"calendar-link\";\nimport Bowser from \"bowser\";\n\n\nconst Calendars = ({ name, timeTZ }) => {\n\n    const [browser, setBrowser] = useState()\n\n    const event = {\n        title: name,\n        start: timeTZ\n    };\n\n    const openCalendar = (link) => {\n        window.open(link, \"_blank\")\n    }\n\n\n\n    const sw = navigator.serviceWorker;\n\n    function pad(num, size = 2) {\n        let s = num + '';\n        while (s.length < size) s = '0' + s;\n        return s;\n    }\n\n    useEffect(() => {\n        console.log(1)\n        console.log('sw', sw)\n        if (sw && browser == true) {\n            console.log(2)\n            /*global showNotification, TimestampTrigger*/\n            /*eslint no-undef: \"error\"*/\n            const requestServices = async () => {\n                debugger\n\n                if (\"showTrigger\" in Notification.prototype) {\n                    /* Notification Triggers supported */\n                    console.log('Notification Triggers supported')\n                }\n                debugger;\n                const reg = await sw.getRegistration();\n\n\n\n                Notification.requestPermission().then(permission => {\n                    if (permission !== 'granted') {\n                        alert('you need to allow push notifications');\n                    } else {\n                        const timestamp = new Date().getTime() + 10 * 1000;\n                        const scheduledTime = new Date(timestamp);\n                        console.log('reeg', reg)\n                        debugger;\n                        const browser = Bowser.getParser(window.navigator.userAgent);\n\n                        console.log(`The current browser name is \"${browser.getBrowserName()}\"`);\n\n                        reg.showNotification(\n                            'Scheduled Push Notification',\n                            {\n                                tag: timestamp, // a unique ID\n                                body: 'Hi there, it\\'s ' + pad(scheduledTime.getHours()) + ':' + pad(scheduledTime.getMinutes()), // content of the push notification\n                                showTrigger: new TimestampTrigger(timestamp), // set the time for the push notification\n                                data: {\n                                    url: window.location.href, // pass the current url to the notification\n                                }\n                            }\n                        );\n                    }\n                });\n\n\n            }\n            requestServices();\n\n        }\n    }, [sw, browser])\n\n    return (\n        <div className=\"calendars\">\n            <p>También, recuerdame</p>\n            <ul>\n                <li onClick={() => openCalendar(google(event))}>\n                    <div className=\"ic google\"></div>\n                    <div className=\"info\">\n                        <span>Calendar</span>\n                        <h4>Google</h4>\n                    </div>\n                </li>\n                <li onClick={() => openCalendar(ics(event))}>\n                    <div className=\"ic apple\"></div>\n                    <div className=\"info\">\n                        <span>Calendar</span>\n                        <h4>Apple</h4>\n                    </div>\n                </li>\n                <li onClick={() => openCalendar(outlook(event))}>\n                    <div className=\"ic outlook\"></div>\n                    <div className=\"info\">\n                        <span>Calendar</span>\n                        <h4>Outlook</h4>\n                    </div>\n                </li>\n            </ul>\n\n            <div className=\"browser\" onClick={() => setBrowser(true)}>\n                <p>Nah! prefiero en mi navegador</p>\n                <div className=\"ic chrome\"></div>\n            </div>\n\n            <p className=\"cright\">Lorem ipsum dolor, sit amet consectetur adipisicing elit. Fugit a ipsum quod eveniet excepturi.</p>\n        </div>\n    )\n}\n\nexport { Calendars }"]},"metadata":{},"sourceType":"module"}