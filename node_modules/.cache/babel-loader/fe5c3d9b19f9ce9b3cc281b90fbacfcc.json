{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sebastian/Escritorio/timezo/front/src/Routes.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useState, useEffect } from 'react';\nimport { Switch, Router, Route, Redirect, useLocation } from 'react-router-dom';\nimport ReadEvent from './pages/ReadEvent';\nimport CreateEvent from './pages/CreateEvent';\nimport { createBrowserHistory } from 'history'; //import ReactGA from 'react-ga';\n\nimport GA4React from 'ga-4-react';\nimport { useDispatch } from 'react-redux';\nimport { authCheckState } from './reducer/auth'; //ReactGA.initialize(\"G-0LX7RPJE1L\");\n\nconst ga4react = new GA4React('G-0LX7RPJE1L');\nga4react.initialize().then(ga4 => {\n  alert('hola');\n  ga4.pageview(window.location.pathname + window.location.search); //  ga4.gtag('event','pageview','path') // or your custom gtag event\n}, err => {\n  console.error(err);\n});\nconst history = createBrowserHistory();\n/*\nhistory.listen(location => {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n});\n*/\n\nexport default function Routes() {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authCheckState()); // eslint-disable-next-line\n  }, []);\n  /*\n  useEffect(() => {\n      ReactGA.pageview(window.location.pathname);\n  }, [])\n  */\n\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(CreateEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ['/:id_owner/:id_counter'],\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        location: location,\n        children: /*#__PURE__*/_jsxDEV(ReadEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, location.pathname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Routes, \"Dj1mb8JCO6Sv8rsv+khgMkpzGQM=\", false, function () {\n  return [useDispatch, useLocation];\n});\n\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/Routes.js"],"names":["React","lazy","useState","useEffect","Switch","Router","Route","Redirect","useLocation","ReadEvent","CreateEvent","createBrowserHistory","GA4React","useDispatch","authCheckState","ga4react","initialize","then","ga4","alert","pageview","window","location","pathname","search","err","console","error","history","Routes","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CC,WAA1C,QAA6D,kBAA7D;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,oBAAT,QAAqC,SAArC,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,cAAT,QAA+B,gBAA/B,C,CAEA;;AAGA,MAAMC,QAAQ,GAAG,IAAIH,QAAJ,CAAa,cAAb,CAAjB;AAEAG,QAAQ,CAACC,UAAT,GAAsBC,IAAtB,CAA4BC,GAAD,IAAS;AAChCC,EAAAA,KAAK,CAAC,MAAD,CAAL;AACAD,EAAAA,GAAG,CAACE,QAAJ,CAAaC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,GAA2BF,MAAM,CAACC,QAAP,CAAgBE,MAAxD,EAFgC,CAGhC;AACH,CAJD,EAIIC,GAAD,IAAS;AACRC,EAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACH,CAND;AASA,MAAMG,OAAO,GAAGjB,oBAAoB,EAApC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASkB,MAAT,GAAkB;AAAA;;AAC7B,QAAMC,QAAQ,GAAGjB,WAAW,EAA5B;AACAV,EAAAA,SAAS,CAAC,MAAM;AACZ2B,IAAAA,QAAQ,CAAChB,cAAc,EAAf,CAAR,CADY,CAEZ;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA;AACJ;AACA;AACA;AACA;;AAEI,QAAMQ,QAAQ,GAAGd,WAAW,EAA5B;AACA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEoB,OAAjB;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA,6BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,CAAC,wBAAD,CAAb;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEN,QAAlB;AAAA,+BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ,SAAiCA,QAAQ,CAACC,QAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA1BuBM,M;UACHhB,W,EAYAL,W;;;KAbGqB,M","sourcesContent":["import React, { lazy, useState, useEffect } from 'react';\nimport { Switch, Router, Route, Redirect, useLocation } from 'react-router-dom';\nimport ReadEvent from './pages/ReadEvent';\nimport CreateEvent from './pages/CreateEvent';\nimport { createBrowserHistory } from 'history';\n//import ReactGA from 'react-ga';\n\nimport GA4React from 'ga-4-react';\nimport { useDispatch } from 'react-redux';\n\nimport { authCheckState } from './reducer/auth'\n\n//ReactGA.initialize(\"G-0LX7RPJE1L\");\n\n\nconst ga4react = new GA4React('G-0LX7RPJE1L');\n\nga4react.initialize().then((ga4) => {\n    alert('hola')\n    ga4.pageview(window.location.pathname + window.location.search)\n    //  ga4.gtag('event','pageview','path') // or your custom gtag event\n}, (err) => {\n    console.error(err)\n})\n\n\nconst history = createBrowserHistory();\n/*\nhistory.listen(location => {\n    ReactGA.set({ page: location.pathname });\n    ReactGA.pageview(location.pathname);\n});\n*/\n\nexport default function Routes() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n        dispatch(authCheckState());\n        // eslint-disable-next-line\n    }, []);\n\n    /*\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname);\n    }, [])\n    */\n\n    const location = useLocation();\n    return (\n        <Router history={history}>\n            <Route exact path=\"/\">\n                <CreateEvent />\n            </Route>\n            <Route path={['/:id_owner/:id_counter']}>\n                <Switch location={location} key={location.pathname}>\n                    <ReadEvent />\n                </Switch>\n            </Route>\n        </Router>\n    );\n}"]},"metadata":{},"sourceType":"module"}