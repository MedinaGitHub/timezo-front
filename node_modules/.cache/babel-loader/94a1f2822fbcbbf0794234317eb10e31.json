{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sebastian/Escritorio/timezo/front/src/Routes.js\",\n    _s = $RefreshSig$();\n\nimport React, { lazy, useState, useEffect } from 'react';\nimport { Switch, Router, Route, Redirect, useLocation } from 'react-router-dom';\nimport ReadEvent from './pages/ReadEvent';\nimport CreateEvent from './pages/CreateEvent';\nimport { createBrowserHistory } from 'history';\nimport { useDispatch } from 'react-redux';\nimport { authCheckState } from './reducer/auth';\nconst history = createBrowserHistory();\nexport default function Routes() {\n  _s();\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authCheckState()); // eslint-disable-next-line\n  }, []);\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Router, {\n    history: history,\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      children: /*#__PURE__*/_jsxDEV(CreateEvent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ['/:id_owner/:id_counter'],\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        location: location,\n        children: /*#__PURE__*/_jsxDEV(ReadEvent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, location.pathname, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Routes, \"Dj1mb8JCO6Sv8rsv+khgMkpzGQM=\", false, function () {\n  return [useDispatch, useLocation];\n});\n\n_c = Routes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Routes\");","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/Routes.js"],"names":["React","lazy","useState","useEffect","Switch","Router","Route","Redirect","useLocation","ReadEvent","CreateEvent","createBrowserHistory","useDispatch","authCheckState","history","Routes","dispatch","location","pathname"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,QAAtB,EAAgCC,SAAhC,QAAiD,OAAjD;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CC,WAA1C,QAA6D,kBAA7D;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAAUC,cAAV,QAAgC,gBAAhC;AAGA,MAAMC,OAAO,GAAGH,oBAAoB,EAApC;AAEA,eAAe,SAASI,MAAT,GAAkB;AAAA;;AAC7B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACAT,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CAACH,cAAc,EAAf,CAAR,CADc,CAEd;AACD,GAHQ,EAGN,EAHM,CAAT;AAMA,QAAMI,QAAQ,GAAGT,WAAW,EAA5B;AACA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAEM,OAAjB;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAA,6BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE,CAAC,wBAAD,CAAb;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAEG,QAAlB;AAAA,+BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ,SAAiCA,QAAQ,CAACC,QAA1C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GArBuBH,M;UACHH,W,EAOAJ,W;;;KARGO,M","sourcesContent":["import React, { lazy, useState, useEffect } from 'react';\nimport { Switch, Router, Route, Redirect, useLocation } from 'react-router-dom';\nimport ReadEvent from './pages/ReadEvent';\nimport CreateEvent from './pages/CreateEvent';\nimport { createBrowserHistory } from 'history';\nimport { useDispatch } from 'react-redux';\n\nimport {  authCheckState } from './reducer/auth'\n\n\nconst history = createBrowserHistory();\n\nexport default function Routes() {\n    const dispatch = useDispatch();\n    useEffect(() => {\n      dispatch(authCheckState());\n      // eslint-disable-next-line\n    }, []);\n\n    \n    const location = useLocation();\n    return (\n        <Router history={history}>\n            <Route exact path=\"/\">\n                <CreateEvent />\n            </Route>\n            <Route path={['/:id_owner/:id_counter']}>\n                <Switch location={location} key={location.pathname}>\n                    <ReadEvent />\n                </Switch>\n            </Route>\n        </Router>\n    );\n}"]},"metadata":{},"sourceType":"module"}