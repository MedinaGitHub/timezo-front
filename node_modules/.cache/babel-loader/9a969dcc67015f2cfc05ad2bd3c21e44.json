{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sebastian/Escritorio/timezo/front/src/pages/ReadEvent/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { format, parseISO } from 'date-fns';\nimport { enUS, fr } from 'date-fns/esm/locale';\nimport { PicSide } from './PicSide';\nimport { Header } from '../CreateEvent/Header';\nimport { TItle } from './Title';\nimport { TimeEvent } from './TimeEvent';\nimport { LetMeKnow } from './LetMeKnow';\nimport { Calendars } from './Calendars';\nimport { Logo } from '../Logo';\nimport ReactGA from \"react-ga\";\nReactGA.initialize('G-0LX7RPJE1L');\nexport default function ReadEvent() {\n  _s();\n\n  const {\n    id_owner,\n    id_counter\n  } = useParams();\n  const [event_data, setEvent_data] = useState(null);\n  useEffect(() => {\n    ReactGA.pageview(window.location.pathname + window.location.search);\n  }, []);\n  const optionsTime = {\n    //localeMatcher: \"best fit\", // lookup or best fit\n    //timeZone: undefined,\n    //hour12: true,              // true or false\n    //formatMatcher: \"best fit\", // lookup or best fit\n    //era: undefined,        // narrow, short, or long\n    //year: \"numeric\",         // numeric or 2-digit\n    month: \"long\",\n    // numeric, 2-digit, narrow, short, or long\n    day: \"numeric\",\n    // numeric or 2-digit\n    weekday: \"long\",\n    // narrow, short, or long\n    hour: \"numeric\",\n    // numeric or 2-digit\n    minute: \"numeric\" // numeric or 2-digit\n    //second: \"numeric\",       // numeric or 2-digit\n    //timeZoneName: \"short\",   // short or long\n\n  };\n  useEffect(() => {\n    const getProcedure = async () => {\n      const procedure = await axios.get(`/api/events/${id_counter}/${id_owner}`);\n      const localDate = parseISO(procedure.data[0]._event_time);\n      procedure.data[0].time_local = localDate.toLocaleString(undefined, optionsTime);\n      setEvent_data(procedure.data[0]);\n    };\n\n    getProcedure();\n  }, [id_owner, id_counter]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [event_data && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(PicSide, {\n          link_event: event_data._link_event,\n          picture: event_data._picture_event\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"box__info\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box__event\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"share\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cont__event\",\n            children: event_data && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TItle, {\n                picture: event_data._picture_event,\n                name: event_data._name,\n                description: event_data._description,\n                categories: event_data._categories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TimeEvent, {\n                time: event_data.time_local\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(LetMeKnow, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Calendars, {\n                name: event_data._name,\n                timeTZ: event_data._event_time,\n                timeLocal: event_data.time_local\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ReadEvent, \"HHTKn3PVFxx74UR2Pd7AZR8R/G4=\", false, function () {\n  return [useParams];\n});\n\n_c = ReadEvent;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadEvent\");","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/pages/ReadEvent/index.js"],"names":["React","useState","useEffect","useParams","axios","format","parseISO","enUS","fr","PicSide","Header","TItle","TimeEvent","LetMeKnow","Calendars","Logo","ReactGA","initialize","ReadEvent","id_owner","id_counter","event_data","setEvent_data","pageview","window","location","pathname","search","optionsTime","month","day","weekday","hour","minute","getProcedure","procedure","get","localDate","data","_event_time","time_local","toLocaleString","undefined","_link_event","_picture_event","_name","_description","_categories"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { format, parseISO } from 'date-fns'\nimport { enUS, fr } from 'date-fns/esm/locale'\nimport { PicSide } from './PicSide';\nimport { Header } from '../CreateEvent/Header';\nimport { TItle } from './Title';\nimport { TimeEvent } from './TimeEvent';\nimport { LetMeKnow } from './LetMeKnow';\nimport { Calendars } from './Calendars';\nimport { Logo } from '../Logo';\nimport ReactGA from \"react-ga\";\n\nReactGA.initialize('G-0LX7RPJE1L');\n\nexport default function ReadEvent() {\n\n    const { id_owner, id_counter } = useParams();\n    const [event_data, setEvent_data] = useState(null)\n\n    useEffect(() => {\n        ReactGA.pageview(window.location.pathname + window.location.search);\n    }, []);\n\n    const optionsTime =\n    {\n        //localeMatcher: \"best fit\", // lookup or best fit\n        //timeZone: undefined,\n        //hour12: true,              // true or false\n        //formatMatcher: \"best fit\", // lookup or best fit\n        //era: undefined,        // narrow, short, or long\n        //year: \"numeric\",         // numeric or 2-digit\n        month: \"long\",          // numeric, 2-digit, narrow, short, or long\n        day: \"numeric\",          // numeric or 2-digit\n        weekday: \"long\",        // narrow, short, or long\n        hour: \"numeric\",         // numeric or 2-digit\n        minute: \"numeric\",       // numeric or 2-digit\n        //second: \"numeric\",       // numeric or 2-digit\n        //timeZoneName: \"short\",   // short or long\n    };\n\n\n    useEffect(() => {\n        const getProcedure = async () => {\n            const procedure = await axios.get(`/api/events/${id_counter}/${id_owner}`);\n            const localDate = parseISO(procedure.data[0]._event_time);\n            procedure.data[0].time_local = localDate.toLocaleString(undefined, optionsTime)\n                ;\n            setEvent_data(procedure.data[0])\n        }\n        getProcedure()\n    }, [id_owner, id_counter])\n    return (\n        <>\n            <Logo />\n            <main>\n                {event_data && <>\n                    <PicSide link_event={event_data._link_event} picture={event_data._picture_event} />\n                </>}\n                <section className=\"box__info\">\n                    <Header />\n                    <div className=\"box__event\">\n                        <div className=\"share\"></div>\n                        <div className=\"cont__event\">\n                            {event_data && <>\n                                <TItle picture={event_data._picture_event} name={event_data._name} description={event_data._description} categories={event_data._categories} />\n                                <TimeEvent time={event_data.time_local} />\n                                <LetMeKnow />\n                                <Calendars name={event_data._name} timeTZ={event_data._event_time} timeLocal={event_data.time_local} />\n                            </>}\n                            {/*       <p className=\"cright\">Lorem ipsum dolor, sit amet consectetur adipisicing elit. Fugit a ipsum quod eveniet excepturi.</p>*/}\n                        </div>\n                    </div>\n                </section>\n\n\n            </main>\n        </>\n\n    )\n};"]},"metadata":{},"sourceType":"module"}