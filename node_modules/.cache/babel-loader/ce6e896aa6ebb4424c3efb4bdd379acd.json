{"ast":null,"code":"import axios from'axios';var instance=axios.create({baseURL:process.env.REACT_APP_ENV==='development'?'http://localhost:5000/':process.env.REACT_APP_API,timeout:60*1000});// Add a request interceptor\ninstance.interceptors.request.use(function(config){// Do something before request is sent\nreturn config;},function(error){// Do something with request error\nreturn Promise.reject(error);});// Add a response interceptor\ninstance.interceptors.response.use(function(response){// Any status code that lie within the range of 2xx cause this function to trigger\n// Do something with response data\nreturn response;},function(error){// Any status codes that falls outside the range of 2xx cause this function to trigger\n// Do something with response error\nreturn Promise.reject(error);});export default instance;","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/utils/axios.js"],"names":["axios","instance","create","baseURL","process","env","REACT_APP_ENV","REACT_APP_API","timeout","interceptors","request","use","config","error","Promise","reject","response"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC1BC,OAAO,CACHC,OAAO,CAACC,GAAR,CAAYC,aAAZ,GAA8B,aAA9B,CACM,wBADN,CAEMF,OAAO,CAACC,GAAR,CAAYE,aAJI,CAK1BC,OAAO,CAAE,GAAK,IALY,CAAb,CAAjB,CAQA;AACAP,QAAQ,CAACQ,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CACI,SAAUC,MAAV,CAAkB,CACd;AACA,MAAOA,CAAAA,MAAP,CACH,CAJL,CAKI,SAAUC,KAAV,CAAiB,CACb;AACA,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACH,CARL,EAWA;AACAZ,QAAQ,CAACQ,YAAT,CAAsBO,QAAtB,CAA+BL,GAA/B,CACI,SAAUK,QAAV,CAAoB,CAChB;AACA;AACA,MAAOA,CAAAA,QAAP,CACH,CALL,CAMI,SAAUH,KAAV,CAAiB,CACb;AACA;AACA,MAAOC,CAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP,CACH,CAVL,EAaA,cAAeZ,CAAAA,QAAf","sourcesContent":["import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL:\n        process.env.REACT_APP_ENV === 'development'\n            ? 'http://localhost:5000/'\n            : process.env.REACT_APP_API,\n    timeout: 60 * 1000\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(\n    function (config) {\n        // Do something before request is sent\n        return config;\n    },\n    function (error) {\n        // Do something with request error\n        return Promise.reject(error);\n    }\n);\n\n// Add a response interceptor\ninstance.interceptors.response.use(\n    function (response) {\n        // Any status code that lie within the range of 2xx cause this function to trigger\n        // Do something with response data\n        return response;\n    },\n    function (error) {\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        // Do something with response error\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;"]},"metadata":{},"sourceType":"module"}