{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sebastian/Escritorio/timezo/front/src/pages/event/ReadEvent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { format, parseISO } from 'date-fns';\nexport default function ReadEvent() {\n  _s();\n\n  const {\n    id_owner,\n    id_counter\n  } = useParams();\n  const [event_data, setEvent_data] = useState(null);\n  useEffect(() => {\n    const getProcedure = async () => {\n      const procedure = await axios.get(`/api/events/${id_counter}/${id_owner}`);\n      const localDate = parseISO(procedure.data[0]._event_time);\n      procedure.data[0].time_local = format(localDate, 'MMMM dd, yyyy, EEEE, hh:mm aaa');\n      setEvent_data(procedure.data[0]);\n    };\n\n    getProcedure();\n  }, [id_owner, id_counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: event_data && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: event_data._name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: event_data._link_event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: event_data.time_local\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadEvent, \"Vn7f0bJrDYqCbX5hU9euMpDcw/4=\", false, function () {\n  return [useParams];\n});\n\n_c = ReadEvent;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadEvent\");","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/pages/event/ReadEvent.js"],"names":["React","useState","useEffect","useParams","axios","format","parseISO","ReadEvent","id_owner","id_counter","event_data","setEvent_data","getProcedure","procedure","get","localDate","data","_event_time","time_local","_name","_link_event"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,UAAjC;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BN,SAAS,EAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,YAAY,GAAG,YAAY;AAC7B,YAAMC,SAAS,GAAG,MAAMT,KAAK,CAACU,GAAN,CAAW,eAAcL,UAAW,IAAGD,QAAS,EAAhD,CAAxB;AACA,YAAMO,SAAS,GAAGT,QAAQ,CAACO,SAAS,CAACG,IAAV,CAAe,CAAf,EAAkBC,WAAnB,CAA1B;AACAJ,MAAAA,SAAS,CAACG,IAAV,CAAe,CAAf,EAAkBE,UAAlB,GAA+Bb,MAAM,CAACU,SAAD,EAAY,gCAAZ,CAArC;AACAJ,MAAAA,aAAa,CAACE,SAAS,CAACG,IAAV,CAAe,CAAf,CAAD,CAAb;AACH,KALD;;AAMAJ,IAAAA,YAAY;AACf,GARQ,EAQN,CAACJ,QAAD,EAAWC,UAAX,CARM,CAAT;AASA,sBACI;AAAA,cACKC,UAAU,iBACP;AAAA,8BACI;AAAA,kBAAKA,UAAU,CAACS;AAAhB;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAKT,UAAU,CAACU;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBAAKV,UAAU,CAACQ;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAxBuBX,S;UAEaJ,S;;;KAFbI,S;AAwBvB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { format, parseISO } from 'date-fns'\n\nexport default function ReadEvent() {\n\n    const { id_owner, id_counter } = useParams();\n    const [event_data, setEvent_data] = useState(null)\n\n    useEffect(() => {\n        const getProcedure = async () => {\n            const procedure = await axios.get(`/api/events/${id_counter}/${id_owner}`);\n            const localDate = parseISO(procedure.data[0]._event_time);\n            procedure.data[0].time_local = format(localDate, 'MMMM dd, yyyy, EEEE, hh:mm aaa')\n            setEvent_data(procedure.data[0])\n        }\n        getProcedure()\n    }, [id_owner, id_counter])\n    return (\n        <div>\n            {event_data &&\n                <>\n                    <h3>{event_data._name}</h3>\n                    <h3>{event_data._link_event}</h3>\n                    <h2>{event_data.time_local}</h2>\n                </>}\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}