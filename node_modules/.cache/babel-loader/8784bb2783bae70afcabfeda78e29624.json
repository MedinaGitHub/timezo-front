{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sebastian/Escritorio/timezo/front/src/pages/event/ReadEvent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { format, parseISO, formatDistance, formatRelative, subDays } from 'date-fns';\nexport default function ReadEvent() {\n  _s();\n\n  const {\n    id_owner,\n    id_counter\n  } = useParams();\n  const [event_data, setEvent_data] = useState(null); //useEffect for get\n  //obtener dato de los parametros\n\n  useEffect(() => {\n    const getProcedure = async () => {\n      const procedure = await axios.get(`/api/events/${id_counter}/${id_owner}`);\n      console.log('procedure', procedure);\n      const localDate = parseISO(procedure.data[0]._event_time);\n      console.log('format to now', format(localDate, 'MMMM dd, yyyy, EEEE, hh:mm aaa'));\n      procedure.data[0].time_local = format(localDate, 'MMMM dd, yyyy, EEEE, hh:mm aaa');\n      setEvent_data(procedure.data[0]);\n      setEvent_time(format(localDate, 'MMMM dd, yyyy, EEEE, hh:mm aaa'));\n    };\n\n    getProcedure();\n  }, [id_owner, id_counter]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: event_time && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: event_data._name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: event_data._link_event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: event_data.time_local\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ReadEvent, \"Vn7f0bJrDYqCbX5hU9euMpDcw/4=\", false, function () {\n  return [useParams];\n});\n\n_c = ReadEvent;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReadEvent\");","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/pages/event/ReadEvent.js"],"names":["React","useState","useEffect","useParams","axios","format","parseISO","formatDistance","formatRelative","subDays","ReadEvent","id_owner","id_counter","event_data","setEvent_data","getProcedure","procedure","get","console","log","localDate","data","_event_time","time_local","setEvent_time","event_time","_name","_link_event"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,cAA3B,EAA2CC,cAA3C,EAA2DC,OAA3D,QAA0E,UAA1E;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEhC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA2BT,SAAS,EAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,IAAD,CAA5C,CAHgC,CAIhC;AACA;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMa,YAAY,GAAG,YAAY;AAE7B,YAAMC,SAAS,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAW,eAAcL,UAAW,IAAGD,QAAS,EAAhD,CAAxB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,SAAzB;AACA,YAAMI,SAAS,GAAGd,QAAQ,CAACU,SAAS,CAACK,IAAV,CAAe,CAAf,EAAkBC,WAAnB,CAA1B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Bd,MAAM,CAACe,SAAD,EAAY,gCAAZ,CAAnC;AACAJ,MAAAA,SAAS,CAACK,IAAV,CAAe,CAAf,EAAkBE,UAAlB,GAA+BlB,MAAM,CAACe,SAAD,EAAY,gCAAZ,CAArC;AACAN,MAAAA,aAAa,CAACE,SAAS,CAACK,IAAV,CAAe,CAAf,CAAD,CAAb;AACAG,MAAAA,aAAa,CAACnB,MAAM,CAACe,SAAD,EAAY,gCAAZ,CAAP,CAAb;AACH,KATD;;AAUAL,IAAAA,YAAY;AAGf,GAfQ,EAeN,CAACJ,QAAD,EAAWC,UAAX,CAfM,CAAT;AAgBA,sBACI;AAAA,cACKa,UAAU,iBACP;AAAA,8BACA;AAAA,kBAAKZ,UAAU,CAACa;AAAhB;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAA,kBAAKb,UAAU,CAACc;AAAhB;AAAA;AAAA;AAAA;AAAA,cAFA,eAGA;AAAA,kBAAKd,UAAU,CAACU;AAAhB;AAAA;AAAA;AAAA;AAAA,cAHA;AAAA;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GAjCuBb,S;UAEaP,S;;;KAFbO,S;AAiCvB","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useParams } from 'react-router-dom';\nimport axios from '../../utils/axios';\nimport { format, parseISO, formatDistance, formatRelative, subDays } from 'date-fns'\n\nexport default function ReadEvent() {\n\n    const { id_owner, id_counter } = useParams();\n    const [event_data, setEvent_data] = useState(null)\n    //useEffect for get\n    //obtener dato de los parametros\n\n    useEffect(() => {\n\n        const getProcedure = async () => {\n\n            const procedure = await axios.get(`/api/events/${id_counter}/${id_owner}`);\n            console.log('procedure', procedure)\n            const localDate = parseISO(procedure.data[0]._event_time);\n            console.log('format to now', format(localDate, 'MMMM dd, yyyy, EEEE, hh:mm aaa'))\n            procedure.data[0].time_local = format(localDate, 'MMMM dd, yyyy, EEEE, hh:mm aaa')\n            setEvent_data(procedure.data[0])\n            setEvent_time(format(localDate, 'MMMM dd, yyyy, EEEE, hh:mm aaa'))\n        }\n        getProcedure()\n\n\n    }, [id_owner, id_counter])\n    return (\n        <div>\n            {event_time &&\n                <>\n                <h3>{event_data._name}</h3>\n                <h3>{event_data._link_event}</h3>\n                <h2>{event_data.time_local}</h2>\n                </>}\n        </div>\n    )\n};"]},"metadata":{},"sourceType":"module"}