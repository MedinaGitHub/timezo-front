{"ast":null,"code":"import axios from '../utils/axios';\nimport updateObject from '../utils/updateObject';\n/**************************************************************************\n * Se definen los action types\n */\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_TOKEN = 'AUTH_TOKEN';\n/**************************************************************************\n * Se definen los actions\n */\n\nexport const authStart = () => {\n  return {\n    type: AUTH_START\n  };\n};\nexport const authSuccess = (token, email, name, surname, picture) => {\n  return {\n    type: AUTH_SUCCESS,\n    token: token,\n    email,\n    name,\n    nick_name\n  };\n};\nexport const authFail = error => {\n  return {\n    type: AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return {\n    type: AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios({\n      url: 'api/auth/signin',\n      method: 'POST',\n      data: authData\n    }).then(response => {\n      dispatch(authSuccess(response.data.token, email, response.data.name, response.data.surname, response.data.picture));\n      dispatch(updateToken(response.data.token));\n    }).catch(err => {\n      debugger;\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    dispatch(authStart());\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      axios({\n        url: 'api/auth/verify',\n        method: 'POST',\n        data: {\n          token\n        }\n      }).then(response => {\n        dispatch(authSuccess(token, response.data.email, response.data.name, response.data.surname, response.data.picture));\n        dispatch(updateToken(token));\n      }).catch(err => {\n        dispatch(authFail(err));\n      });\n    }\n  };\n};\nexport const updToken = token => {\n  return {\n    type: AUTH_TOKEN,\n    token: token\n  };\n};\nexport const updateToken = token => {\n  return dispatch => {\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = token;\n    axios.defaults.headers.common.Authorization = token;\n    dispatch(updToken(token));\n  };\n};\nexport const signin = userData => {\n  return dispatch => {\n    dispatch(authStart());\n    axios({\n      url: 'api/auth/signin',\n      method: 'POST',\n      data: userData\n    }).then(response => {\n      dispatch(authSuccess(response.data.token, userData.email, response.data.name, response.data.surname, response.data.picture));\n      dispatch(updateToken(response.data.token));\n    }).catch(err => {\n      if (err) {\n        dispatch(authFail(err));\n      }\n    });\n  };\n};\nexport const signup = userData => {\n  return dispatch => {\n    dispatch(authStart());\n    axios({\n      url: 'api/auth/signup',\n      method: 'POST',\n      data: userData\n    }).then(response => {\n      /*\n         dispatch(\n           authSuccess(\n             response.data.token,\n             userData.email,\n             userData.name,\n             userData.surname\n           )\n         );\n         */\n      //dispatch(updateToken(response.data.token));\n    }).catch(err => {\n      if (err) {\n        dispatch(authFail(err));\n      }\n    });\n  };\n};\nexport const authLogoutSession = () => {\n  return {\n    type: AUTH_LOGOUT\n  };\n};\nexport const authLogout = () => {\n  return dispatch => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common.Authorization;\n    dispatch(authLogoutSession());\n  };\n};\nexport const authGoogle = googleData => {\n  return dispatch => {\n    dispatch(authStart());\n    debugger;\n    axios({\n      url: 'api/auth/google',\n      method: 'POST',\n      data: googleData\n    }).then(response => {\n      dispatch(authSuccess(response.data.token, googleData.profileObj.email, response.data.name, response.data.nick_name));\n      debugger;\n      dispatch(updateToken(response.data.token));\n    }).catch(err => {\n      if (err) {\n        dispatch(authFail(err));\n      }\n    });\n  };\n};\n/**************************************************************************\n * Se definen los reducers\n */\n\nconst reducerAuthStart = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst reducerAuthSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    email: action.email,\n    name: action.name,\n    surname: action.surname,\n    picture: action.picture,\n    error: null,\n    loading: false\n  });\n};\n\nconst reducerAuthFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducerAuthLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    email: null,\n    name: null,\n    surname: null,\n    picture: null\n  });\n};\n\nconst reducerUpdateToken = (state, action) => {\n  return updateObject(state, {\n    token: action.token\n  });\n};\n/**************************************************************************\n * Core del reducer\n */\n\n\nexport default function reducer(state = {\n  token: null,\n  email: null,\n  name: null,\n  surname: null,\n  picture: null,\n  error: null,\n  nick_name: null,\n  loading: false\n}, action) {\n  switch (action.type) {\n    case AUTH_START:\n      return reducerAuthStart(state, action);\n\n    case AUTH_SUCCESS:\n      return reducerAuthSuccess(state, action);\n\n    case AUTH_FAIL:\n      return reducerAuthFail(state, action);\n\n    case AUTH_LOGOUT:\n      return reducerAuthLogout(state, action);\n\n    case AUTH_TOKEN:\n      return reducerUpdateToken(state, action);\n\n    default:\n      break;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/reducer/auth.js"],"names":["axios","updateObject","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_TOKEN","authStart","type","authSuccess","token","email","name","surname","picture","nick_name","authFail","error","logout","localStorage","removeItem","auth","password","dispatch","authData","returnSecureToken","url","method","data","then","response","updateToken","catch","err","authCheckState","getItem","updToken","setItem","defaults","headers","common","Authorization","signin","userData","signup","authLogoutSession","authLogout","authGoogle","googleData","profileObj","reducerAuthStart","state","action","loading","reducerAuthSuccess","reducerAuthFail","reducerAuthLogout","reducerUpdateToken","reducer"],"mappings":"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","sourcesContent":["import axios from '../utils/axios';\nimport updateObject from '../utils/updateObject';\n\n/**************************************************************************\n * Se definen los action types\n */\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_TOKEN = 'AUTH_TOKEN';\n\n/**************************************************************************\n * Se definen los actions\n */\n\nexport const authStart = () => {\n  return {\n    type: AUTH_START\n  };\n};\n\nexport const authSuccess = (token, email, name, surname, picture) => {\n  return {\n    type: AUTH_SUCCESS,\n    token: token,\n    email,\n    name,\n    nick_name\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return {\n    type: AUTH_LOGOUT\n  };\n};\n\nexport const auth = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios({\n      url: 'api/auth/signin',\n      method: 'POST',\n      data: authData\n    })\n      .then((response) => {\n        dispatch(\n          authSuccess(\n            response.data.token,\n            email,\n            response.data.name,\n            response.data.surname,\n            response.data.picture\n          )\n        );\n        dispatch(updateToken(response.data.token));\n      })\n      .catch((err) => {\n        debugger;\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const token = localStorage.getItem('token');\n    if (!token) {\n      dispatch(logout());\n    } else {\n      axios({\n        url: 'api/auth/verify',\n        method: 'POST',\n        data: { token }\n      })\n        .then((response) => {\n          dispatch(\n            authSuccess(\n              token,\n              response.data.email,\n              response.data.name,\n              response.data.surname,\n              response.data.picture\n            )\n          );\n          dispatch(updateToken(token));\n        })\n        .catch((err) => {\n          dispatch(authFail(err));\n        });\n    }\n  };\n};\n\nexport const updToken = (token) => {\n  return {\n    type: AUTH_TOKEN,\n    token: token\n  };\n};\n\nexport const updateToken = (token) => {\n  return (dispatch) => {\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = token;\n    axios.defaults.headers.common.Authorization = token;\n    dispatch(updToken(token));\n  };\n};\n\nexport const signin = (userData) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios({\n      url: 'api/auth/signin',\n      method: 'POST',\n      data: userData\n    })\n      .then((response) => {\n        dispatch(\n          authSuccess(\n            response.data.token,\n            userData.email,\n            response.data.name,\n            response.data.surname,\n            response.data.picture\n          )\n        );\n        dispatch(updateToken(response.data.token));\n      })\n      .catch((err) => {\n        if (err) {\n          dispatch(authFail(err));\n        }\n      });\n  };\n};\n\nexport const signup = (userData) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios({\n      url: 'api/auth/signup',\n      method: 'POST',\n      data: userData\n    })\n      .then((response) => {\n        /*\n           dispatch(\n             authSuccess(\n               response.data.token,\n               userData.email,\n               userData.name,\n               userData.surname\n             )\n           );\n           */\n        //dispatch(updateToken(response.data.token));\n      })\n      .catch((err) => {\n        if (err) {\n          dispatch(authFail(err));\n        }\n      });\n  };\n};\n\nexport const authLogoutSession = () => {\n  return {\n    type: AUTH_LOGOUT\n  };\n};\n\nexport const authLogout = () => {\n  return (dispatch) => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common.Authorization;\n    dispatch(authLogoutSession());\n  };\n};\n\nexport const authGoogle = (googleData) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    debugger;\n    axios({\n      url: 'api/auth/google',\n      method: 'POST',\n      data: googleData\n    })\n      .then((response) => {\n        dispatch(\n          authSuccess(\n            response.data.token,\n            googleData.profileObj.email,\n            response.data.name,\n            response.data.nick_name,\n          )\n        );\n        debugger;\n        dispatch(updateToken(response.data.token));\n      })\n      .catch((err) => {\n        if (err) {\n          dispatch(authFail(err));\n        }\n      });\n  };\n};\n\n/**************************************************************************\n * Se definen los reducers\n */\n\nconst reducerAuthStart = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\nconst reducerAuthSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    email: action.email,\n    name: action.name,\n    surname: action.surname,\n    picture:  action.picture,\n    error: null,\n    loading: false\n  });\n};\n\nconst reducerAuthFail = (state, action) => {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducerAuthLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    email: null,\n    name: null,\n    surname: null,\n    picture:  null\n  });\n};\n\nconst reducerUpdateToken = (state, action) => {\n  return updateObject(state, {\n    token: action.token\n  });\n};\n\n/**************************************************************************\n * Core del reducer\n */\n\nexport default function reducer(\n  state = {\n    token: null,\n    email: null,\n    name: null,\n    surname: null,\n    picture: null,\n    error: null,\n    nick_name:null,\n    loading: false\n  },\n  action\n) {\n  switch (action.type) {\n    case AUTH_START:\n      return reducerAuthStart(state, action);\n    case AUTH_SUCCESS:\n      return reducerAuthSuccess(state, action);\n    case AUTH_FAIL:\n      return reducerAuthFail(state, action);\n    case AUTH_LOGOUT:\n      return reducerAuthLogout(state, action);\n    case AUTH_TOKEN:\n      return reducerUpdateToken(state, action);\n    default:\n      break;\n  }\n  return state;\n}"]},"metadata":{},"sourceType":"module"}