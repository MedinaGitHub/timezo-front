{"ast":null,"code":"import axios from '../utils/axios';\nimport updateObject from '../utils/updateObject';\n/**************************************************************************\n * Se definen los action types\n */\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_TOKEN = 'AUTH_TOKEN';\nexport const AUTH_LOADING = 'AUTH_LOADING';\n/**************************************************************************\n * Se definen los actions\n */\n\nexport const authStart = () => {\n  return {\n    type: AUTH_START\n  };\n};\nexport const authSuccess = (token, email, name, nick_name) => {\n  return {\n    type: AUTH_SUCCESS,\n    token: token,\n    email,\n    name,\n    nick_name\n  };\n};\nexport const authFail = error => {\n  return {\n    type: AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return {\n    type: AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios({\n      url: 'api/auth/signin',\n      method: 'POST',\n      data: authData\n    }).then(response => {\n      dispatch(authSuccess(response.data.token, email, response.data.name, response.data.surname, response.data.picture));\n      dispatch(updateToken(response.data.token));\n    }).catch(err => {\n      debugger;\n      dispatch(authFail(err));\n    });\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    dispatch(authStart());\n    debugger;\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      axios({\n        url: 'api/auth/verify',\n        method: 'POST',\n        data: {\n          token\n        }\n      }).then(response => {\n        dispatch(authSuccess(token, response.data.email, response.data.name, response.data.surname, response.data.picture));\n        dispatch(updateToken(token));\n      }).catch(err => {\n        dispatch(authFail(err));\n      });\n    }\n  };\n};\nexport const updToken = token => {\n  return {\n    type: AUTH_TOKEN,\n    token: token\n  };\n};\nexport const updateToken = token => {\n  return dispatch => {\n    debugger;\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = token;\n    axios.defaults.headers.common.Authorization = token;\n    dispatch(updToken(token));\n  };\n};\nexport const updateLocalStorage = data => {\n  return dispatch => {\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('nick_name', data.nick_name);\n  };\n};\nexport const signin = userData => {\n  return dispatch => {\n    dispatch(authStart());\n    axios({\n      url: 'api/auth/signin',\n      method: 'POST',\n      data: userData\n    }).then(response => {\n      dispatch(authSuccess(response.data.token, userData.email, response.data.name, response.data.surname, response.data.picture));\n      dispatch(updateToken(response.data.token));\n    }).catch(err => {\n      if (err) {\n        dispatch(authFail(err));\n      }\n    });\n  };\n};\nexport const signup = userData => {\n  return dispatch => {\n    dispatch(authStart());\n    axios({\n      url: 'api/auth/signup',\n      method: 'POST',\n      data: userData\n    }).then(response => {\n      /*\n         dispatch(\n           authSuccess(\n             response.data.token,\n             userData.email,\n             userData.name,\n             userData.surname\n           )\n         );\n         */\n      //dispatch(updateToken(response.data.token));\n    }).catch(err => {\n      if (err) {\n        debugger;\n        console.log('salto el medio error', err);\n        dispatch(authFail(err));\n      }\n    });\n  };\n};\nexport const authLogoutSession = () => {\n  return {\n    type: AUTH_LOGOUT\n  };\n};\nexport const authLogout = () => {\n  return dispatch => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common.Authorization;\n    dispatch(authLogoutSession());\n  };\n};\nexport const authGoogle = googleData => {\n  return dispatch => {\n    debugger;\n    dispatch(authStart());\n    debugger;\n    axios({\n      url: 'api/auth/google',\n      method: 'POST',\n      data: googleData\n    }).then(response => {\n      debugger;\n\n      if (response.data.message) {\n        dispatch(authFail(response.data.message));\n      } else {\n        dispatch(authSuccess(response.data.token, response.data.email, response.data.name, response.data.nick_name));\n        debugger;\n        updateLocalStorage(response.data);\n        dispatch(updateToken(response.data.token));\n      }\n    }).catch(err => {\n      if (err) {\n        dispatch(authFail(err));\n      }\n    });\n  };\n};\nexport const authGoogleSignIN = googleData => {\n  return dispatch => {\n    debugger;\n    dispatch(authStart());\n    debugger;\n    axios({\n      url: 'api/auth/googleIn',\n      method: 'POST',\n      data: googleData\n    }).then(response => {\n      debugger;\n\n      if (response.data.message) {\n        dispatch(authFail(response.data.message));\n      } else {\n        dispatch(authSuccess(response.data.token, response.data.email, response.data.name, response.data.nick_name));\n        debugger;\n        dispatch(updateToken(response.data.token));\n      }\n    }).catch(err => {\n      if (err) {\n        dispatch(authFail(err));\n      }\n    });\n  };\n};\n/**************************************************************************\n * Se definen los reducers\n */\n\nconst reducerAuthStart = (state, action) => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    return updateObject(state, {\n      token: localStorage.getItem('token'),\n      email: localStorage.getItem('email'),\n      name: localStorage.getItem('name'),\n      nick_name: localStorage.getItem('nick_name')\n    });\n  }\n};\n\nconst loadingLocalStorage = (state, action) => {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nconst reducerAuthSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    email: action.email,\n    name: action.name,\n    surname: action.surname,\n    picture: action.picture,\n    nick_name: action.nick_name,\n    error: null,\n    loading: false\n  });\n};\n\nconst reducerAuthFail = (state, action) => {\n  debugger;\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducerAuthLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    email: null,\n    name: null,\n    surname: null,\n    picture: null\n  });\n};\n\nconst reducerUpdateToken = (state, action) => {\n  return updateObject(state, {\n    token: action.token\n  });\n};\n/**************************************************************************\n * Core del reducer\n */\n\n\nexport default function reducer(state = {\n  token: null,\n  email: null,\n  name: null,\n  surname: null,\n  picture: null,\n  error: null,\n  nick_name: null,\n  loading: false\n}, action) {\n  switch (action.type) {\n    case AUTH_LOADING:\n      return loadingLocalStorage(state, action);\n\n    case AUTH_START:\n      return reducerAuthStart(state, action);\n\n    case AUTH_SUCCESS:\n      return reducerAuthSuccess(state, action);\n\n    case AUTH_FAIL:\n      return reducerAuthFail(state, action);\n\n    case AUTH_LOGOUT:\n      return reducerAuthLogout(state, action);\n\n    case AUTH_TOKEN:\n      return reducerUpdateToken(state, action);\n\n    default:\n      break;\n  }\n\n  return state;\n}","map":{"version":3,"sources":["/home/sebastian/Escritorio/timezo/front/src/reducer/auth.js"],"names":["axios","updateObject","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","AUTH_TOKEN","AUTH_LOADING","authStart","type","authSuccess","token","email","name","nick_name","authFail","error","logout","localStorage","removeItem","auth","password","dispatch","authData","returnSecureToken","url","method","data","then","response","surname","picture","updateToken","catch","err","authCheckState","getItem","updToken","setItem","defaults","headers","common","Authorization","updateLocalStorage","signin","userData","signup","console","log","authLogoutSession","authLogout","authGoogle","googleData","message","authGoogleSignIN","reducerAuthStart","state","action","loadingLocalStorage","loading","reducerAuthSuccess","reducerAuthFail","reducerAuthLogout","reducerUpdateToken","reducer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA;AACA;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AAEP;AACA;AACA;;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLC,IAAAA,IAAI,EAAEP;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAMQ,WAAW,GAAG,CAACC,KAAD,EAAQC,KAAR,EAAeC,IAAf,EAAqBC,SAArB,KAAmC;AAC5D,SAAO;AACLL,IAAAA,IAAI,EAAEN,YADD;AAELQ,IAAAA,KAAK,EAAEA,KAFF;AAGLC,IAAAA,KAHK;AAILC,IAAAA,IAJK;AAKLC,IAAAA;AALK,GAAP;AAOD,CARM;AAUP,OAAO,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLP,IAAAA,IAAI,EAAEL,SADD;AAELY,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,MAAM,GAAG,MAAM;AAC1BC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,SAAO;AACLV,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CALM;AAOP,OAAO,MAAMe,IAAI,GAAG,CAACR,KAAD,EAAQS,QAAR,KAAqB;AACvC,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACA,UAAMe,QAAQ,GAAG;AACfX,MAAAA,KAAK,EAAEA,KADQ;AAEfS,MAAAA,QAAQ,EAAEA,QAFK;AAGfG,MAAAA,iBAAiB,EAAE;AAHJ,KAAjB;AAKAxB,IAAAA,KAAK,CAAC;AACJyB,MAAAA,GAAG,EAAE,iBADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAEJ;AAHF,KAAD,CAAL,CAKGK,IALH,CAKSC,QAAD,IAAc;AAClBP,MAAAA,QAAQ,CACNZ,WAAW,CACTmB,QAAQ,CAACF,IAAT,CAAchB,KADL,EAETC,KAFS,EAGTiB,QAAQ,CAACF,IAAT,CAAcd,IAHL,EAITgB,QAAQ,CAACF,IAAT,CAAcG,OAJL,EAKTD,QAAQ,CAACF,IAAT,CAAcI,OALL,CADL,CAAR;AASAT,MAAAA,QAAQ,CAACU,WAAW,CAACH,QAAQ,CAACF,IAAT,CAAchB,KAAf,CAAZ,CAAR;AACD,KAhBH,EAiBGsB,KAjBH,CAiBUC,GAAD,IAAS;AACd;AACAZ,MAAAA,QAAQ,CAACP,QAAQ,CAACmB,GAAD,CAAT,CAAR;AACD,KApBH;AAqBD,GA5BD;AA6BD,CA9BM;AAgCP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,SAAQb,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACA;AACA,UAAMG,KAAK,GAAGO,YAAY,CAACkB,OAAb,CAAqB,OAArB,CAAd;;AACA,QAAI,CAACzB,KAAL,EAAY;AACVW,MAAAA,QAAQ,CAACL,MAAM,EAAP,CAAR;AACD,KAFD,MAEO;AACLjB,MAAAA,KAAK,CAAC;AACJyB,QAAAA,GAAG,EAAE,iBADD;AAEJC,QAAAA,MAAM,EAAE,MAFJ;AAGJC,QAAAA,IAAI,EAAE;AAAEhB,UAAAA;AAAF;AAHF,OAAD,CAAL,CAKGiB,IALH,CAKSC,QAAD,IAAc;AAClBP,QAAAA,QAAQ,CACNZ,WAAW,CACTC,KADS,EAETkB,QAAQ,CAACF,IAAT,CAAcf,KAFL,EAGTiB,QAAQ,CAACF,IAAT,CAAcd,IAHL,EAITgB,QAAQ,CAACF,IAAT,CAAcG,OAJL,EAKTD,QAAQ,CAACF,IAAT,CAAcI,OALL,CADL,CAAR;AASAT,QAAAA,QAAQ,CAACU,WAAW,CAACrB,KAAD,CAAZ,CAAR;AACD,OAhBH,EAiBGsB,KAjBH,CAiBUC,GAAD,IAAS;AACdZ,QAAAA,QAAQ,CAACP,QAAQ,CAACmB,GAAD,CAAT,CAAR;AACD,OAnBH;AAoBD;AACF,GA5BD;AA6BD,CA9BM;AAgCP,OAAO,MAAMG,QAAQ,GAAI1B,KAAD,IAAW;AACjC,SAAO;AACLF,IAAAA,IAAI,EAAEH,UADD;AAELK,IAAAA,KAAK,EAAEA;AAFF,GAAP;AAID,CALM;AAOP,OAAO,MAAMqB,WAAW,GAAIrB,KAAD,IAAW;AACpC,SAAQW,QAAD,IAAc;AACnB;AACAJ,IAAAA,YAAY,CAACoB,OAAb,CAAqB,OAArB,EAA8B3B,KAA9B;AACAX,IAAAA,KAAK,CAACuC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8B,eAA9B,IAAiD9B,KAAjD;AACAX,IAAAA,KAAK,CAACuC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA8C/B,KAA9C;AACAW,IAAAA,QAAQ,CAACe,QAAQ,CAAC1B,KAAD,CAAT,CAAR;AACD,GAND;AAOD,CARM;AAWP,OAAO,MAAMgC,kBAAkB,GAAIhB,IAAD,IAAU;AAC1C,SAAQL,QAAD,IAAc;AACnBJ,IAAAA,YAAY,CAACoB,OAAb,CAAqB,OAArB,EAA8BX,IAAI,CAACf,KAAnC;AACAM,IAAAA,YAAY,CAACoB,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACd,IAAlC;AACAK,IAAAA,YAAY,CAACoB,OAAb,CAAqB,WAArB,EAAkCX,IAAI,CAACb,SAAvC;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAM8B,MAAM,GAAIC,QAAD,IAAc;AAClC,SAAQvB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACAR,IAAAA,KAAK,CAAC;AACJyB,MAAAA,GAAG,EAAE,iBADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAEkB;AAHF,KAAD,CAAL,CAKGjB,IALH,CAKSC,QAAD,IAAc;AAClBP,MAAAA,QAAQ,CACNZ,WAAW,CACTmB,QAAQ,CAACF,IAAT,CAAchB,KADL,EAETkC,QAAQ,CAACjC,KAFA,EAGTiB,QAAQ,CAACF,IAAT,CAAcd,IAHL,EAITgB,QAAQ,CAACF,IAAT,CAAcG,OAJL,EAKTD,QAAQ,CAACF,IAAT,CAAcI,OALL,CADL,CAAR;AASAT,MAAAA,QAAQ,CAACU,WAAW,CAACH,QAAQ,CAACF,IAAT,CAAchB,KAAf,CAAZ,CAAR;AACD,KAhBH,EAiBGsB,KAjBH,CAiBUC,GAAD,IAAS;AACd,UAAIA,GAAJ,EAAS;AACPZ,QAAAA,QAAQ,CAACP,QAAQ,CAACmB,GAAD,CAAT,CAAR;AACD;AACF,KArBH;AAsBD,GAxBD;AAyBD,CA1BM;AA4BP,OAAO,MAAMY,MAAM,GAAID,QAAD,IAAc;AAClC,SAAQvB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACAR,IAAAA,KAAK,CAAC;AACJyB,MAAAA,GAAG,EAAE,iBADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAEkB;AAHF,KAAD,CAAL,CAKGjB,IALH,CAKSC,QAAD,IAAc;AAClB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ;AACD,KAjBH,EAkBGI,KAlBH,CAkBUC,GAAD,IAAS;AACd,UAAIA,GAAJ,EAAS;AACP;AACAa,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCd,GAApC;AACAZ,QAAAA,QAAQ,CAACP,QAAQ,CAACmB,GAAD,CAAT,CAAR;AACD;AACF,KAxBH;AAyBD,GA3BD;AA4BD,CA7BM;AA+BP,OAAO,MAAMe,iBAAiB,GAAG,MAAM;AACrC,SAAO;AACLxC,IAAAA,IAAI,EAAEJ;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,MAAM6C,UAAU,GAAG,MAAM;AAC9B,SAAQ5B,QAAD,IAAc;AACnBJ,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACA,WAAOnB,KAAK,CAACuC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,CAA8BC,aAArC;AACApB,IAAAA,QAAQ,CAAC2B,iBAAiB,EAAlB,CAAR;AACD,GAJD;AAKD,CANM;AAQP,OAAO,MAAME,UAAU,GAAIC,UAAD,IAAgB;AACxC,SAAQ9B,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACA;AACAR,IAAAA,KAAK,CAAC;AACJyB,MAAAA,GAAG,EAAE,iBADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAEyB;AAHF,KAAD,CAAL,CAKGxB,IALH,CAKSC,QAAD,IAAc;AAClB;;AACA,UAAIA,QAAQ,CAACF,IAAT,CAAc0B,OAAlB,EAA2B;AACzB/B,QAAAA,QAAQ,CAACP,QAAQ,CAACc,QAAQ,CAACF,IAAT,CAAc0B,OAAf,CAAT,CAAR;AACD,OAFD,MAEO;AACL/B,QAAAA,QAAQ,CACNZ,WAAW,CACTmB,QAAQ,CAACF,IAAT,CAAchB,KADL,EAETkB,QAAQ,CAACF,IAAT,CAAcf,KAFL,EAGTiB,QAAQ,CAACF,IAAT,CAAcd,IAHL,EAITgB,QAAQ,CAACF,IAAT,CAAcb,SAJL,CADL,CAAR;AAQA;AAEA6B,QAAAA,kBAAkB,CAACd,QAAQ,CAACF,IAAV,CAAlB;AACAL,QAAAA,QAAQ,CAACU,WAAW,CAACH,QAAQ,CAACF,IAAT,CAAchB,KAAf,CAAZ,CAAR;AACD;AACF,KAvBH,EAwBGsB,KAxBH,CAwBUC,GAAD,IAAS;AACd,UAAIA,GAAJ,EAAS;AACPZ,QAAAA,QAAQ,CAACP,QAAQ,CAACmB,GAAD,CAAT,CAAR;AACD;AACF,KA5BH;AA6BD,GAjCD;AAkCD,CAnCM;AAqCP,OAAO,MAAMoB,gBAAgB,GAAIF,UAAD,IAAgB;AAC9C,SAAQ9B,QAAD,IAAc;AACnB;AACAA,IAAAA,QAAQ,CAACd,SAAS,EAAV,CAAR;AACA;AACAR,IAAAA,KAAK,CAAC;AACJyB,MAAAA,GAAG,EAAE,mBADD;AAEJC,MAAAA,MAAM,EAAE,MAFJ;AAGJC,MAAAA,IAAI,EAAEyB;AAHF,KAAD,CAAL,CAKGxB,IALH,CAKSC,QAAD,IAAc;AAClB;;AACA,UAAIA,QAAQ,CAACF,IAAT,CAAc0B,OAAlB,EAA2B;AACzB/B,QAAAA,QAAQ,CAACP,QAAQ,CAACc,QAAQ,CAACF,IAAT,CAAc0B,OAAf,CAAT,CAAR;AACD,OAFD,MAEO;AACL/B,QAAAA,QAAQ,CACNZ,WAAW,CACTmB,QAAQ,CAACF,IAAT,CAAchB,KADL,EAETkB,QAAQ,CAACF,IAAT,CAAcf,KAFL,EAGTiB,QAAQ,CAACF,IAAT,CAAcd,IAHL,EAITgB,QAAQ,CAACF,IAAT,CAAcb,SAJL,CADL,CAAR;AAQA;AACAQ,QAAAA,QAAQ,CAACU,WAAW,CAACH,QAAQ,CAACF,IAAT,CAAchB,KAAf,CAAZ,CAAR;AACD;AAEF,KAtBH,EAuBGsB,KAvBH,CAuBUC,GAAD,IAAS;AACd,UAAIA,GAAJ,EAAS;AACPZ,QAAAA,QAAQ,CAACP,QAAQ,CAACmB,GAAD,CAAT,CAAR;AACD;AACF,KA3BH;AA4BD,GAhCD;AAiCD,CAlCM;AAoCP;AACA;AACA;;AAEA,MAAMqB,gBAAgB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,QAAM9C,KAAK,GAAGO,YAAY,CAACkB,OAAb,CAAqB,OAArB,CAAd;;AACA,MAAGzB,KAAH,EAAS;AACP,WAAOV,YAAY,CAACuD,KAAD,EAAQ;AACzB7C,MAAAA,KAAK,EAAEO,YAAY,CAACkB,OAAb,CAAqB,OAArB,CADkB;AAEzBxB,MAAAA,KAAK,EAAEM,YAAY,CAACkB,OAAb,CAAqB,OAArB,CAFkB;AAGzBvB,MAAAA,IAAI,EAAEK,YAAY,CAACkB,OAAb,CAAqB,MAArB,CAHmB;AAIzBtB,MAAAA,SAAS,EAAEI,YAAY,CAACkB,OAAb,CAAqB,WAArB;AAJc,KAAR,CAAnB;AAMD;AAEF,CAXD;;AAaA,MAAMsB,mBAAmB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC7C,SAAOxD,YAAY,CAACuD,KAAD,EAAQ;AAAExC,IAAAA,KAAK,EAAE,IAAT;AAAe2C,IAAAA,OAAO,EAAE;AAAxB,GAAR,CAAnB;AACD,CAFD;;AAKA,MAAMC,kBAAkB,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC5C,SAAOxD,YAAY,CAACuD,KAAD,EAAQ;AACzB7C,IAAAA,KAAK,EAAE8C,MAAM,CAAC9C,KADW;AAEzBC,IAAAA,KAAK,EAAE6C,MAAM,CAAC7C,KAFW;AAGzBC,IAAAA,IAAI,EAAE4C,MAAM,CAAC5C,IAHY;AAIzBiB,IAAAA,OAAO,EAAE2B,MAAM,CAAC3B,OAJS;AAKzBC,IAAAA,OAAO,EAAE0B,MAAM,CAAC1B,OALS;AAMzBjB,IAAAA,SAAS,EAAE2C,MAAM,CAAC3C,SANO;AAOzBE,IAAAA,KAAK,EAAE,IAPkB;AAQzB2C,IAAAA,OAAO,EAAE;AARgB,GAAR,CAAnB;AAUD,CAXD;;AAaA,MAAME,eAAe,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACzC;AACA,SAAOxD,YAAY,CAACuD,KAAD,EAAQ;AACzBxC,IAAAA,KAAK,EAAEyC,MAAM,CAACzC,KADW;AAEzB2C,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CAND;;AAQA,MAAMG,iBAAiB,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AAC3C,SAAOxD,YAAY,CAACuD,KAAD,EAAQ;AACzB7C,IAAAA,KAAK,EAAE,IADkB;AAEzBC,IAAAA,KAAK,EAAE,IAFkB;AAGzBC,IAAAA,IAAI,EAAE,IAHmB;AAIzBiB,IAAAA,OAAO,EAAE,IAJgB;AAKzBC,IAAAA,OAAO,EAAE;AALgB,GAAR,CAAnB;AAOD,CARD;;AAUA,MAAMgC,kBAAkB,GAAG,CAACP,KAAD,EAAQC,MAAR,KAAmB;AAC5C,SAAOxD,YAAY,CAACuD,KAAD,EAAQ;AACzB7C,IAAAA,KAAK,EAAE8C,MAAM,CAAC9C;AADW,GAAR,CAAnB;AAGD,CAJD;AAMA;AACA;AACA;;;AAEA,eAAe,SAASqD,OAAT,CACbR,KAAK,GAAG;AACN7C,EAAAA,KAAK,EAAE,IADD;AAENC,EAAAA,KAAK,EAAE,IAFD;AAGNC,EAAAA,IAAI,EAAE,IAHA;AAINiB,EAAAA,OAAO,EAAE,IAJH;AAKNC,EAAAA,OAAO,EAAE,IALH;AAMNf,EAAAA,KAAK,EAAE,IAND;AAONF,EAAAA,SAAS,EAAE,IAPL;AAQN6C,EAAAA,OAAO,EAAE;AARH,CADK,EAWbF,MAXa,EAYb;AACA,UAAQA,MAAM,CAAChD,IAAf;AACE,SAAKF,YAAL;AACE,aAAOmD,mBAAmB,CAACF,KAAD,EAAQC,MAAR,CAA1B;;AACF,SAAKvD,UAAL;AACE,aAAOqD,gBAAgB,CAACC,KAAD,EAAQC,MAAR,CAAvB;;AACF,SAAKtD,YAAL;AACE,aAAOyD,kBAAkB,CAACJ,KAAD,EAAQC,MAAR,CAAzB;;AACF,SAAKrD,SAAL;AACE,aAAOyD,eAAe,CAACL,KAAD,EAAQC,MAAR,CAAtB;;AACF,SAAKpD,WAAL;AACE,aAAOyD,iBAAiB,CAACN,KAAD,EAAQC,MAAR,CAAxB;;AACF,SAAKnD,UAAL;AACE,aAAOyD,kBAAkB,CAACP,KAAD,EAAQC,MAAR,CAAzB;;AACF;AACE;AAdJ;;AAgBA,SAAOD,KAAP;AACD","sourcesContent":["import axios from '../utils/axios';\nimport updateObject from '../utils/updateObject';\n\n/**************************************************************************\n * Se definen los action types\n */\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\nexport const AUTH_TOKEN = 'AUTH_TOKEN';\nexport const AUTH_LOADING = 'AUTH_LOADING'\n\n/**************************************************************************\n * Se definen los actions\n */\n\nexport const authStart = () => {\n  return {\n    type: AUTH_START\n  };\n};\n\nexport const authSuccess = (token, email, name, nick_name) => {\n  return {\n    type: AUTH_SUCCESS,\n    token: token,\n    email,\n    name,\n    nick_name\n  };\n};\n\nexport const authFail = (error) => {\n  return {\n    type: AUTH_FAIL,\n    error: error\n  };\n};\n\nexport const logout = () => {\n  localStorage.removeItem('token');\n  return {\n    type: AUTH_LOGOUT\n  };\n};\n\nexport const auth = (email, password) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    axios({\n      url: 'api/auth/signin',\n      method: 'POST',\n      data: authData\n    })\n      .then((response) => {\n        dispatch(\n          authSuccess(\n            response.data.token,\n            email,\n            response.data.name,\n            response.data.surname,\n            response.data.picture\n          )\n        );\n        dispatch(updateToken(response.data.token));\n      })\n      .catch((err) => {\n        debugger;\n        dispatch(authFail(err));\n      });\n  };\n};\n\nexport const authCheckState = () => {\n  return (dispatch) => {\n    dispatch(authStart());\n    debugger\n    const token = localStorage.getItem('token');\n    if (!token) {\n      dispatch(logout());\n    } else {\n      axios({\n        url: 'api/auth/verify',\n        method: 'POST',\n        data: { token }\n      })\n        .then((response) => {\n          dispatch(\n            authSuccess(\n              token,\n              response.data.email,\n              response.data.name,\n              response.data.surname,\n              response.data.picture\n            )\n          );\n          dispatch(updateToken(token));\n        })\n        .catch((err) => {\n          dispatch(authFail(err));\n        });\n    }\n  };\n};\n\nexport const updToken = (token) => {\n  return {\n    type: AUTH_TOKEN,\n    token: token\n  };\n};\n\nexport const updateToken = (token) => {\n  return (dispatch) => {\n    debugger\n    localStorage.setItem('token', token);\n    axios.defaults.headers.common['Authorization'] = token;\n    axios.defaults.headers.common.Authorization = token;\n    dispatch(updToken(token));\n  };\n};\n\n\nexport const updateLocalStorage = (data) => {\n  return (dispatch) => {\n    localStorage.setItem('email', data.email);\n    localStorage.setItem('name', data.name);\n    localStorage.setItem('nick_name', data.nick_name);\n  };\n};\n\nexport const signin = (userData) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios({\n      url: 'api/auth/signin',\n      method: 'POST',\n      data: userData\n    })\n      .then((response) => {\n        dispatch(\n          authSuccess(\n            response.data.token,\n            userData.email,\n            response.data.name,\n            response.data.surname,\n            response.data.picture\n          )\n        );\n        dispatch(updateToken(response.data.token));\n      })\n      .catch((err) => {\n        if (err) {\n          dispatch(authFail(err));\n        }\n      });\n  };\n};\n\nexport const signup = (userData) => {\n  return (dispatch) => {\n    dispatch(authStart());\n    axios({\n      url: 'api/auth/signup',\n      method: 'POST',\n      data: userData\n    })\n      .then((response) => {\n        /*\n           dispatch(\n             authSuccess(\n               response.data.token,\n               userData.email,\n               userData.name,\n               userData.surname\n             )\n           );\n           */\n        //dispatch(updateToken(response.data.token));\n      })\n      .catch((err) => {\n        if (err) {\n          debugger;\n          console.log('salto el medio error', err)\n          dispatch(authFail(err));\n        }\n      });\n  };\n};\n\nexport const authLogoutSession = () => {\n  return {\n    type: AUTH_LOGOUT\n  };\n};\n\nexport const authLogout = () => {\n  return (dispatch) => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common.Authorization;\n    dispatch(authLogoutSession());\n  };\n};\n\nexport const authGoogle = (googleData) => {\n  return (dispatch) => {\n    debugger;\n    dispatch(authStart());\n    debugger;\n    axios({\n      url: 'api/auth/google',\n      method: 'POST',\n      data: googleData\n    })\n      .then((response) => {\n        debugger;\n        if (response.data.message) {\n          dispatch(authFail(response.data.message));\n        } else {\n          dispatch(\n            authSuccess(\n              response.data.token,\n              response.data.email,\n              response.data.name,\n              response.data.nick_name,\n            )\n          );\n          debugger;\n\n          updateLocalStorage(response.data)\n          dispatch(updateToken(response.data.token));\n        }\n      })\n      .catch((err) => {\n        if (err) {\n          dispatch(authFail(err));\n        }\n      });\n  };\n};\n\nexport const authGoogleSignIN = (googleData) => {\n  return (dispatch) => {\n    debugger;\n    dispatch(authStart());\n    debugger;\n    axios({\n      url: 'api/auth/googleIn',\n      method: 'POST',\n      data: googleData\n    })\n      .then((response) => {\n        debugger;\n        if (response.data.message) {\n          dispatch(authFail(response.data.message));\n        } else {\n          dispatch(\n            authSuccess(\n              response.data.token,\n              response.data.email,\n              response.data.name,\n              response.data.nick_name,\n            )\n          );\n          debugger;\n          dispatch(updateToken(response.data.token));\n        }\n\n      })\n      .catch((err) => {\n        if (err) {\n          dispatch(authFail(err));\n        }\n      });\n  };\n};\n\n/**************************************************************************\n * Se definen los reducers\n */\n\nconst reducerAuthStart = (state, action) => {\n  const token = localStorage.getItem('token');\n  if(token){\n    return updateObject(state, {\n      token: localStorage.getItem('token'),\n      email: localStorage.getItem('email'),\n      name: localStorage.getItem('name'),\n      nick_name: localStorage.getItem('nick_name')\n    });\n  }\n\n};\n\nconst loadingLocalStorage = (state, action) => {\n  return updateObject(state, { error: null, loading: true });\n};\n\n\nconst reducerAuthSuccess = (state, action) => {\n  return updateObject(state, {\n    token: action.token,\n    email: action.email,\n    name: action.name,\n    surname: action.surname,\n    picture: action.picture,\n    nick_name: action.nick_name,\n    error: null,\n    loading: false\n  });\n};\n\nconst reducerAuthFail = (state, action) => {\n  debugger;\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nconst reducerAuthLogout = (state, action) => {\n  return updateObject(state, {\n    token: null,\n    email: null,\n    name: null,\n    surname: null,\n    picture: null\n  });\n};\n\nconst reducerUpdateToken = (state, action) => {\n  return updateObject(state, {\n    token: action.token\n  });\n};\n\n/**************************************************************************\n * Core del reducer\n */\n\nexport default function reducer(\n  state = {\n    token: null,\n    email: null,\n    name: null,\n    surname: null,\n    picture: null,\n    error: null,\n    nick_name: null,\n    loading: false\n  },\n  action\n) {\n  switch (action.type) {\n    case AUTH_LOADING:\n      return loadingLocalStorage(state, action);\n    case AUTH_START:\n      return reducerAuthStart(state, action);\n    case AUTH_SUCCESS:\n      return reducerAuthSuccess(state, action);\n    case AUTH_FAIL:\n      return reducerAuthFail(state, action);\n    case AUTH_LOGOUT:\n      return reducerAuthLogout(state, action);\n    case AUTH_TOKEN:\n      return reducerUpdateToken(state, action);\n    default:\n      break;\n  }\n  return state;\n}"]},"metadata":{},"sourceType":"module"}